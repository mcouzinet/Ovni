package {	    import flash.display.Sprite;    import flash.events.*;    import flash.external.ExternalInterface;    import flash.utils.*;	import com.adobe.serialization.json.*;		import flash.display.StageScaleMode;	import fl.transitions.Tween;	import fl.transitions.easing.*;	import flash.media.Sound;	    public class Winteriscoming extends Sprite {		private var soucoupe:Soucoupe;		private var larg:uint = stage.stageWidth;		private var haut:uint = stage.stageHeight;		private var probaRocket:Number = 0;		private var vitesseRocket:Number = 10;		private var numSheep;		private var distChopeOk:Boolean = false;		private var tabSheep:Array = new Array();		private var zoneDetect:Number = 40;		private var i:uint;		private var gameover:Boolean = false;		public var bruitaspiration:Sound = new Bruitaspiration();		public var bruitexplosion:Sound = new Bruitexplosion();		public var bruitgameover:Sound = new BruitGameover();		public var bruitmoutonquibele:Sound = new Bruitmoutonquibele();		public var bruitroquette:Sound = new Bruitroquette();		        public function Winteriscoming() {						stage.scaleMode = StageScaleMode.NO_SCALE;						// Création de la soucoupe 		    soucoupe = new Soucoupe(250,larg/2);			addChild(soucoupe);						// Création de l'interface avec javascript			ExternalInterface.marshallExceptions = true;						// Ajout de le l'interface avec javascript			if (ExternalInterface.available) {				try {	            	ExternalInterface.addCallback("sendToActionScript", receivedFromJavaScript);	                   if (!checkJavaScriptReady()) {	                       var readyTimer:Timer = new Timer(100, 0);	                       readyTimer.addEventListener(TimerEvent.TIMER, timerHandler);	                       readyTimer.start();	                   }	             } catch (error:SecurityError) {	             	trace(error);	             } catch (error:Error) {	             	trace(error);	             }	        }					}		// Vérifie si javascript est prêt		private function checkJavaScriptReady():Boolean {			var isReady:Boolean = ExternalInterface.call("isReady");			return isReady;		}				// Le Javascript n'est pas prêt, on attend un peu et on rééssaie		private function timerHandler(event:TimerEvent):void {		var isReady:Boolean = checkJavaScriptReady();			if (isReady) {				Timer(event.target).stop();			}		}				// Fonction de réception des données envoiés par javascript	        public function receivedFromJavaScript(value:String):void {						var data = JSON.decode(value,true);						switch(data.action){								case 'bouge' :										if(data.value == 'on'){						fond.play();					}else{						fond.stop();					}					break;								case 'zoom' :					soucoupe.bouge(data.value);					distChopeOk = (data.value == 100)?true:false;					if(data.value == 1000 && data.charger == "true"){						soucoupe.gotoAndPlay('espace');						ExternalInterface.call("sendToJavaScript",'{"action":"decharger"}');					}					break;									case 'mouton' :					for(i=0;i<numSheep;i++){						if(tabSheep[i].numero == data.num){							var deplacement:Tween = new Tween(tabSheep[i], "x", Strong.easeOut, tabSheep[i].x, (240 + ( data.value*260/0.0008)), 0.2, true);						}					}					break;									case 'init' :					numSheep = data.numSheep;					tabSheep = [];					probaRocket = data.rocket;					soucoupe.y = 250;					gameover = false;					soucoupe.gotoAndStop('soucoupe');					addEventListener(Event.ENTER_FRAME, enterFrame);					for( i=0 ; i<numSheep ; i++){						var mout = new Mouton();						mout.numero = i;						addChildAt(mout,1);						tabSheep.push(mout);					}					break;									case 'get' :					if(data.value == 'on'){						soucoupe.gotoAndPlay('chope');						bruitaspiration.play();						for( i=0 ; i<numSheep ; i++ ){							if(tabSheep[i].x < 240+zoneDetect && tabSheep[i].x > 240-zoneDetect && distChopeOk){								tabSheep[i].monte();								bruitmoutonquibele.play();								tabSheep[i].addEventListener(Mouton.CHOPPE,onMoutonChoppe);							}						}					}else{						soucoupe.gotoAndPlay('dechope');					}					break;				case 'gameover' :					bruitgameover.play();					gameover = true;					for( i=0 ; i<numSheep ; i++){						var m:Mouton = tabSheep[i] as Mouton;						removeChild(m);					}					break;			}        }		private function onMoutonChoppe(e:Event){			var mouton:Mouton = e.target as Mouton;			removeChild(mouton);			ExternalInterface.call("sendToJavaScript",'{"action":"choppe","numero":"'+mouton.numero+'"}');		}				// Fonction framerate		private function enterFrame(e:Event):void {			if(Math.random()*probaRocket < 5 && !gameover){			 	var r:Rocket = new Rocket(Math.random()*490 + 10);				r.addEventListener(Rocket.READY,onRocketReady);				addChild(r);			}        }			private function onRocketReady(e:Event):void{			var r:Rocket = e.target as Rocket;			bruitroquette.play();			r.addEventListener(Event.ENTER_FRAME,enterFrameRocket);		}				private function enterFrameRocket(e:Event):void {						var rocket:Rocket = e.target as Rocket;						if(rocket.x < -rocket.width){				rocket.removeEventListener(Event.ENTER_FRAME, enterFrameRocket);	       		removeChild(rocket);			}else{				if(rocket.hitTestObject(soucoupe)){					rocket.removeEventListener(Event.ENTER_FRAME, enterFrameRocket);					bruitexplosion.play();		       		removeChild(rocket);					gameover = true;					soucoupe.gotoAndPlay('explosion');					bruitgameover.play();					ExternalInterface.call("sendToJavaScript",'{"action":"gameOver"}');					for( i=0 ; i<numSheep ; i++){						var m:Mouton = tabSheep[i] as Mouton;						removeChild(m);					}				}				rocket.x -= vitesseRocket;				}        }    } // End of class}